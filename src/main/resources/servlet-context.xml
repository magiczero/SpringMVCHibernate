<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->
	<context:component-scan base-package="com.cngc.pm" />
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- <annotation-driven /> -->
	<annotation-driven conversion-service="conversionService" />
	
	<!-- <beans:bean id="exceptionHandler" class="com.cngc.exception.MyExceptionHandler" /> -->
	<!-- 以后有好的方法，这个应该就用不到了 -->
	<interceptors>
		<!-- <beans:bean class="com.cngc.pm.interceptor.AuthInterceptor"></beans:bean> -->
		<interceptor>
			<mapping path="/document/**"/>
			<mapping path="/moudle/**"/>
			<mapping path="/resource/**"/>
			<mapping path="/authority/**"/>
			<mapping path="/user/**"/>
			<mapping path="/style/**"/>
			<mapping path="/checkitems/**"/>
			<mapping path="/role/**"/>
			<mapping path="/cms/**" />
			<mapping path="/records/**" />
			<mapping path="/incident/**" />
			<mapping path="/change/**" />
			<mapping path="/record/**" />
			<mapping path="/knowledge/**" />
			<mapping path="/stats/**" />
			<mapping path="/workflow/**" />
			<beans:bean class="com.cngc.pm.interceptor.MyInterceptor"></beans:bean>
		</interceptor>
		<!-- <interceptor>
			<mapping path="/user/**"/>
			<mapping path="/authority/**"/>
			<beans:bean class="com.cngc.pm.interceptor.LogInterceptor"></beans:bean>
		</interceptor> -->
	</interceptors>

	<beans:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<beans:property name="basename" value="classpath:messages"></beans:property>		
	</beans:bean>
	
	<beans:bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<beans:property name="converters">
			<beans:set>
				<beans:bean class="com.cngc.pm.service.impl.String2LevelConvertor"/>
			</beans:set>
		</beans:property>
	</beans:bean>
	<!-- <beans:bean id="conversionService"
      class="org.springframework.context.support.ConversionServiceFactoryBean">
        <beans:property name="converters">
            <beans:list>
                <beans:bean class="com.cngc.pm.service.impl.StringToEnumConverterFactory"/>
            </beans:list>
        </beans:property>
    </beans:bean> -->
	<!-- <default-servlet-handler/> -->
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/libs/**" location="/libs/" />
	<resources mapping="/api/**" location="/api/" />
	<resources mapping="/editor/**" location="/editor/" />
	<resources mapping="/explorer/**" location="/explorer/" />
	<resources mapping="/diagram-viewer/**" location="/diagram-viewer/" />

	<!-- <beans:bean id="dataSource1" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url"
			value="jdbc:mysql://localhost:3396/testdb" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="myoa888" />
	</beans:bean> -->

	<!-- Hibernate 4 SessionFactory Bean definition -->
	<beans:bean id="hibernate4AnnotatedSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<!-- <beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>com.cngc.pm.model.Person</beans:value>
			</beans:list> 
		</beans:property>-->
		<beans:property name="packagesToScan" value="com.cngc.pm.model" />
		<!-- <beans:property name="namingStrategy">
			<beans:bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		</beans:property> -->
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
				<!-- <beans:prop key="cache.provider_configuration_file_resource_path">WEB-INF/classes/ehcache.xml</beans:prop>
				<beans:prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</beans:prop> -->
				<!-- 开启查询缓存 -->
				<beans:prop key="cache.use_query_cache">true</beans:prop>
				<!-- 开启二级缓存 -->
				<beans:prop key="hibernate.cache.use_second_level_cache">true</beans:prop>
				<!-- 高速缓存提供程序 -->
				<!-- 由于spring也使用了Ehcache, 保证双方都使用同一个缓存管理器 -->
				<beans:prop key="hibernate.cache.region.factory_class">
				     org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
				</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	<!-- cacheManager, 指定ehcache.xml的位置 -->
    <beans:bean id="cacheManagerEhcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <beans:property name="configLocation">
            <beans:value>classpath:ehcache.xml</beans:value>
        </beans:property>
        <!-- 由于hibernate也使用了Ehcache, 保证双方都使用同一个缓存管理器 -->
        <beans:property name="shared" value="true"/>
    </beans:bean>
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- one of the properties available; the maximum file size in bytes -->
		<!-- 5M -->
		<beans:property name="defaultEncoding" value="utf-8" />
		<beans:property name="maxUploadSize" value="25474565" />
	</beans:bean>
	<beans:bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/> 
				<beans:ref bean="mappingJacksonHttpMessageConverter" />
			</beans:list>
		</beans:property>
	</beans:bean>
	<beans:bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<beans:property name="supportedMediaTypes">
			<beans:list>
				<beans:value>text/plain;charset=UTF-8</beans:value>
				<beans:value>text/html;charset=UTF-8</beans:value>
				<beans:value>text/json;charset=UTF-8</beans:value>
				<beans:value>application/json;charset=UTF-8</beans:value>
				<beans:value>application/octet-stream;charset=UTF-8</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<beans:import resource="spring-datasource.xml" />
	<beans:import resource="activiti.xml" />
	<beans:import resource="quartz.xml" />
</beans:beans>
