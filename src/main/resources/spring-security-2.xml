<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="
      http://www.springframework.org/schema/security
      http://www.springframework.org/schema/security/spring-security-3.2.xsd
      http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">

	<http pattern="/resources/**" security="none" />
	<http pattern="/initLogin.html" security="none" />
	<!-- <http pattern="/workflow/task/getmytaskcount*" security="none" /> -->
	
	<http  use-expressions="true">
		<!-- <intercept-url pattern="/login" access="permitAll"/>
		<intercept-url pattern="/logout" access="permitAll"/>
		<intercept-url pattern="/denied" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/**" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/user" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')"/>
		 -->
		<!-- <form-login login-page="/login.jsp"
	  			  default-target-url="/admin.jsp"/> -->
	  	<form-login login-page="/initLogin.html"
	  			 login-processing-url="/login" 
	  			 username-parameter="username" 
	  			 password-parameter="password" 
	  			 authentication-failure-url="/initLogin.html"
	  			 authentication-success-handler-ref="authenticationSuccessHandler"
	  			 />
	  	
		<!-- <security:custom-filter ref="loginFilter" position="FORM_LOGIN_FILTER"  /> -->
        <custom-filter ref="myFilter" before="FILTER_SECURITY_INTERCEPTOR"/>
        <custom-filter ref="logoutFilter" position="LOGOUT_FILTER" />
		<access-denied-handler error-page="/403"/>
		<!-- 实现免登陆验证 -->
        <remember-me remember-me-parameter="remember-me" user-service-ref="customUserDetailsService" token-validity-seconds="123456789"/>
        <session-management invalid-session-url="/initLogin.html">
        	<concurrency-control max-sessions="1" error-if-maximum-exceeded="false" expired-url="/initLogin.html" />
        </session-management>
		<!-- <logout invalidate-session="true" 
			logout-success-url="/logout/success" 
			logout-url="/logout"/> -->
	</http>
	
	<!-- 认证成功后的处理类 -->
 	<beans:bean id="authenticationSuccessHandler" class="com.cngc.pm.security.AuthenticationSuccessHandlerImpl">
 		<beans:property name="defaultTargetUrl" value="/workflow/task/mytask"></beans:property>
 		<beans:property name="forwardToDestination" value="false"></beans:property>
 	</beans:bean>
	
	<beans:bean id="myFilter" class="com.cngc.pm.security.MyFilterSecurityInterceptor">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="accessDecisionManager" ref="myAccessDecisionManagerBean" />
		<beans:property name="securityMetadataSource" ref="securityMetadataSource" />
	</beans:bean>
	
 	<beans:bean id="customUserDetailsService" class="com.cngc.pm.security.impl.CustomUserDetailsService" />
 		<!-- <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
 	</beans:bean> -->
 	<authentication-manager alias="authenticationManager" erase-credentials="false">
	    <authentication-provider ref="authenticationProvider">  </authentication-provider>
	 </authentication-manager>
    
	<beans:bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">  
   		<beans:property name="userDetailsService" ref="customUserDetailsService" />  
    	<beans:property name="passwordEncoder" ref="passwordEncoder"/> 
    	<beans:property name="saltSource" ref="saltSource"/> 
    </beans:bean>
  
	<beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"/>
	
	<beans:bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource">
    	<beans:property name="userPropertyToUse" value="username"/>
    </beans:bean>
	
	<!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->
	<beans:bean id="myAccessDecisionManagerBean" class="com.cngc.pm.security.MyAccessDecisionManager"/>

	<!-- 资源源数据定义，即定义某一资源可以被哪些角色访问 -->
	<beans:bean id="securityMetadataSource" class="com.cngc.pm.security.MyInvocationSecurityMetadataSource" />	
	
	<!-- 退出系统 -->
	<beans:bean id="logoutFilter" class="com.cngc.pm.security.CustomLogoutFilter">
		<!-- 处理退出的虚拟url -->
        <beans:property name="filterProcessesUrl" value="/logout" />
        <!-- 退出处理成功后的默认显示url -->
        <beans:constructor-arg index="0" value="/login?logout" />
        <beans:constructor-arg index="1">
            <!-- 退出成功后的handler列表 -->
            <beans:array>
                <beans:bean id="securityContextLogoutHandler"
                    class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
                <!-- 加入了开发人员自定义的退出成功处理 -->
                <beans:bean id="customLogoutSuccessHandler" class="com.cngc.pm.security.LogoutHandlerImpl" />
            </beans:array>
        </beans:constructor-arg>
        
	</beans:bean>
</beans:beans>
